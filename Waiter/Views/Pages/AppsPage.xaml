<ui:UiPage x:Class="Waiter.Views.Pages.AppsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Waiter.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:helpers="clr-namespace:Waiter.Helpers"
    xmlns:models="clr-namespace:Waiter.Models"
    xmlns:cmodels="clr-namespace:Waiter.Core.Models;assembly=Waiter.Core"
    Title="AppsPage"
    d:DataContext="{d:DesignInstance local:AppsPage, IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    d:Background="{DynamicResource ApplicationBackgroundBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">

    <Page.Resources>
        <helpers:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <helpers:SizeBytesToHRStringConverter x:Key="SizeBytesToHRStringConverter" />
        <!--<helpers:BoolToStringConverter x:Key="BoolToStringConverter" />-->
        
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="180" MaxWidth="300" Width="*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <!--<ListView
            Grid.Column="0"
            ItemsSource="{Binding ViewModel.Apps}"
            ItemTemplate="{StaticResource ItemTemplate}"
            SelectedItem="{Binding ViewModel.SelectedApp, Mode=TwoWay}" />-->
        <TreeView
            Grid.Column="0"
            ItemsSource="{Binding ViewModel.AppCategoriesWithApps, Mode=OneWay}"
            SelectedItemChanged="TreeView_SelectedItemChanged"
            PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown">
            <TreeView.Resources>
                <HierarchicalDataTemplate
                    DataType="{x:Type models:AppCategoryWithApps}"
                    ItemsSource="{Binding Apps}">
                    <TreeViewItem Header="{Binding AppCategoryName}" />
                </HierarchicalDataTemplate>
                <DataTemplate
                    DataType="{x:Type cmodels:App}">
                    <Grid
                        Height="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <!--<Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>-->

                        <Image
                            Grid.Column="0"
                            Stretch="Uniform"
                            Source="{Binding IconImageUrl}" />
                        <!--<TextBlock
                            Grid.Column="1"
                            Grid.Row="0"
                            Text="{Binding InternalId}" />-->
                        <TextBlock
                            Margin="3,0,0,0"
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            Text="{Binding Name}" />
                        <!--<TextBlock
                            Grid.Column="1"
                            Grid.Row="2"
                            Text="{Binding Source}" />-->
                    </Grid>
                </DataTemplate>
            </TreeView.Resources>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <!--<ContextMenu.ItemTemplate>
                        <HierarchicalDataTemplate
                            DataType="{x:Type cmo}">
                            
                        </HierarchicalDataTemplate>
                    </ContextMenu.ItemTemplate>-->
                    <MenuItem
                        Header="Show selected"
                        Command="{Binding ViewModel.ShowSelectedAppCommand}" />
                    <!--https://stackoverflow.com/questions/43678100/wpf-contextmenu-binding-itemssource-on-sub-menuitem-->
                    <MenuItem
                        Header="Add to..."
                        ItemsSource="{Binding ViewModel.SelectedAppNonExistingAppCategories}"
                        SubmenuOpened="AppAddToMenuItem_SubmenuOpened"
                        SubmenuClosed="AppAddToMenuItem_SubmenuClosed">
                        <MenuItem.ItemContainerStyle>
                            <Style>
                                <Setter Property="MenuItem.Header" Value="{Binding Name}" />
                                <Setter Property="MenuItem.Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:UiPage},
                                                                            Path=DataContext.ViewModel.AppAddToSubMenuClickCommand}" />
                                <Setter Property="MenuItem.CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem
                        Header="Remove from..."
                        ItemsSource="{Binding ViewModel.SelectedAppExistingAppCategories}"
                        SubmenuOpened="AppRemoveFromMenuItem_SubmenuOpened"
                        SubmenuClosed="AppRemoveFromMenuItem_SubmenuClosed">
                        <MenuItem.ItemContainerStyle>
                            <Style>
                                <Setter Property="MenuItem.Header" Value="{Binding Name}" />
                                <Setter Property="MenuItem.Command" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:UiPage},
                                                                            Path=DataContext.ViewModel.AppRemoveFromSubMenuClickCommand}" />
                                <Setter Property="MenuItem.CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>

        <TabControl
            Grid.Column="1"
            Visibility="{Binding ViewModel.SelectedApp, Converter={StaticResource NullToVisibilityConverter}}" >
            <TabItem Header="Main">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Text="AppPackage: " />
                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="1"
                        ItemsSource="{Binding ViewModel.AppPackages, Mode=OneWay}"
                        SelectedItem="{Binding ViewModel.SelectedAppPackage, Mode=TwoWay}" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Text="{Binding}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Text="RunTime: " />
                    <ui:TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        IsReadOnly="True"
                        Text="{Binding ViewModel.AppPackageTotalRunTime, StringFormat={}{0:g}}" />

                    <StackPanel
                        Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="2" >
                        <Button
                            Content="Run"
                            Command="{Binding ViewModel.RunAppCommand}" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Manage Saves">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel
                        Grid.Row="0"
                        Orientation="Vertical" >
                        <Button
                            Content="Refresh"
                            Command="{Binding ViewModel.RefreshGameSaveCommand}" />
                    </StackPanel>
                    <ListView
                        Grid.Row="1"
                        ItemsSource="{Binding ViewModel.GameSaves, Mode=OneWay}"
                        SelectedItem="{Binding ViewModel.SelectedGameSave, Mode=TwoWay}" >
                        <!--https://github.com/lepoco/wpfui/issues/198--><!--
                        <ListView.Style>
                            <Style TargetType="{x:Type ListView}" />
                        </ListView.Style>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Internal Id" Width="50" DisplayMemberBinding="{Binding InternalId}" />
                                <GridViewColumn Header="Size" Width="50" DisplayMemberBinding="{Binding SizeBytes, Converter={StaticResource SizeBytesToHRStringConverter}}" />
                                <GridViewColumn Header="Create Time" Width="50" DisplayMemberBinding="{Binding CreateTime, StringFormat={}{0:O}}" />
                                <GridViewColumn Header="Is Pinned" Width="50" DisplayMemberBinding="{Binding IsPinned}" />
                            </GridView>
                        </ListView.View>-->
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Run Text="Internal Id = " />
                                    <Run Text="{Binding InternalId}" />
                                    <Run Text=", " />
                                    <Run Text="Size = " />
                                    <Run Text="{Binding SizeBytes, Converter={StaticResource SizeBytesToHRStringConverter}}" />
                                    <Run Text=", " />
                                    <Run Text="Create Time = " />
                                    <Run Text="{Binding CreateTime, StringFormat={}{0:O}}" />
                                    <Run Text=", " />
                                    <Run Text="Is Pinned = " />
                                    <Run Text="{Binding IsPinned}" />
                                </TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem
                                    Header="Show selected"
                                    Command="{Binding ViewModel.ShowSelectedGameSaveCommand}" />
                                <MenuItem
                                    Header="Download and restore"
                                    Command="{Binding ViewModel.DownloadAndRestoreGameSaveCommand}" />
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem Header="Manage Runtimes">

            </TabItem>
            <TabItem Header="Settings">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Text="AppPath" />
                    <ui:TextBox
                        Grid.Row="0"
                        Grid.Column="1"
                        PlaceholderText="AppPath..."
                        Text="{Binding ViewModel.AppPackageSetting.AppPath, Mode=TwoWay}" />
                    <ui:Button
                        Grid.Row="0"
                        Grid.Column="2"
                        Content="..."
                        Command="{Binding ViewModel.SelectAppPathCommand}" />

                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Text="AppBaseDir" />
                    <ui:TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        PlaceholderText="AppBaseDir..."
                        Text="{Binding ViewModel.AppPackageSetting.AppBaseDir, Mode=TwoWay}" />
                    <ui:Button
                        Grid.Row="1"
                        Grid.Column="2"
                        Content="..." />
                    
                    <TextBlock
                        Grid.Row="2"
                        Grid.Column="0"
                        Text="AppWorkDir" />
                    <ui:TextBox
                        Grid.Row="2"
                        Grid.Column="1"
                        PlaceholderText="AppWorkDir..."
                        Text="{Binding ViewModel.AppPackageSetting.AppWorkDir, Mode=TwoWay}" />
                    <ui:Button
                        Grid.Row="2"
                        Grid.Column="2"
                        Content="..." />

                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="0"
                        Text="ProcMonName" />
                    <ui:TextBox
                        Grid.Row="3"
                        Grid.Column="1"
                        PlaceholderText="ProcMonName..."
                        Text="{Binding ViewModel.AppPackageSetting.ProcMonName, Mode=TwoWay}" />
                    <ui:Button
                        Grid.Row="3"
                        Grid.Column="2"
                        Content="..." />

                    <TextBlock
                        Grid.Row="4"
                        Grid.Column="0"
                        Text="ProcMonPath" />
                    <ui:TextBox
                        Grid.Row="4"
                        Grid.Column="1"
                        PlaceholderText="ProcMonPath..."
                        Text="{Binding ViewModel.AppPackageSetting.ProcMonPath, Mode=TwoWay}" />
                    <ui:Button
                        Grid.Row="4"
                        Grid.Column="2"
                        Content="..." />

                    <StackPanel
                        Grid.Row="5"
                        Grid.Column="0" >
                        <Button
                            Content="Save"
                            Command="{Binding ViewModel.SaveAppPackageSettingCommand}"/>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</ui:UiPage>
